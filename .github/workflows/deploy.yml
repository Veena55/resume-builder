name: Deploy MERN Stack Project

on:
  push:
    branches:
      - master  # Trigger the workflow on push to the 'master' branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v2

    # Step 2: Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'  # Specify the Node.js version

    # Step 3: Install dependencies for backend and frontend
    - name: Clean backend dependencies
      run: |
        cd backend
        rm -rf node_modules package-lock.json || true

    - name: Install backend dependencies
      run: |
        cd backend
        npm install

    - name: Clean frontend dependencies
      run: |
        cd frontend
        rm -rf node_modules package-lock.json || true

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install

    # Step 4: Build the frontend
    - name: Build frontend
      run: |
        cd frontend
        npm run build

    # Step 5: Deploy to Server (SSH into the server)
    - name: Deploy to Server
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.SERVER_HOST }}  # Your server IP address (add as a secret in GitHub)
        username: ${{ secrets.SERVER_USER }}  # Your server username (add as a secret in GitHub)
        key: ${{ secrets.SERVER_SSH_KEY }}  # Your SSH private key (add as a secret in GitHub)
        port: 22  # Default SSH port
        script: |
          # Navigate to project directory
          cd /var/www/${{ secrets.SERVER_PROJECT_PATH }}
          
          # Pull the latest changes from the repository
          git pull origin master
          
          # Install backend dependencies
          cd backend
          npm install
          
          # Restart backend service using PM2
          pm2 restart resume-builder-backend || pm2 start backend/server.js --name resume-builder-backend
          
          # Navigate to frontend, install dependencies, and build
          cd ../frontend
          npm install
          npm run build
          
          # Ensure Apache or Nginx serves the updated frontend
          sudo systemctl restart apache2 || sudo systemctl restart nginx
